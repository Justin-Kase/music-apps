{"ast":null,"code":"var _jsxFileName = \"/Users/justin.case.trushell/Desktop/ai_projects/midi-sequence-generator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEYS = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\nfunction App() {\n  _s();\n  const [key, setKey] = useState('C');\n  const [loading, setLoading] = useState(false);\n  const handleGenerate = async () => {\n    setLoading(true);\n    const response = await fetch('/generate-midi', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        key\n      })\n    });\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `generated_${key}.mid`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark text-light min-vh-100 d-flex flex-column justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-secondary text-light p-4\",\n      style: {\n        minWidth: 350\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4 text-center\",\n        children: \"MIDI Sequence Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"keySelect\",\n          className: \"form-label\",\n          children: \"Select Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"keySelect\",\n          className: \"form-select\",\n          value: key,\n          onChange: e => setKey(e.target.value),\n          children: KEYS.map(k => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: k,\n            children: k\n          }, k, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary w-100\",\n        onClick: handleGenerate,\n        disabled: loading,\n        children: loading ? 'Generating...' : 'Generate MIDI'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+Ycyx+ZwtQCsTYzESAQ9i5Z4LD4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","KEYS","App","_s","key","setKey","loading","setLoading","handleGenerate","response","fetch","method","headers","body","JSON","stringify","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","children","style","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","k","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/justin.case.trushell/Desktop/ai_projects/midi-sequence-generator/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst KEYS = [\n  'C', 'C#', 'D', 'D#', 'E', 'F',\n  'F#', 'G', 'G#', 'A', 'A#', 'B'\n];\n\nfunction App() {\n  const [key, setKey] = useState('C');\n  const [loading, setLoading] = useState(false);\n\n  const handleGenerate = async () => {\n    setLoading(true);\n    const response = await fetch('/generate-midi', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ key })\n    });\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `generated_${key}.mid`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"bg-dark text-light min-vh-100 d-flex flex-column justify-content-center align-items-center\">\n      <div className=\"card bg-secondary text-light p-4\" style={{ minWidth: 350 }}>\n        <h1 className=\"mb-4 text-center\">MIDI Sequence Generator</h1>\n        <div className=\"mb-3\">\n          <label htmlFor=\"keySelect\" className=\"form-label\">Select Key</label>\n          <select\n            id=\"keySelect\"\n            className=\"form-select\"\n            value={key}\n            onChange={e => setKey(e.target.value)}\n          >\n            {KEYS.map(k => (\n              <option key={k} value={k}>{k}</option>\n            ))}\n          </select>\n        </div>\n        <button\n          className=\"btn btn-primary w-100\"\n          onClick={handleGenerate}\n          disabled={loading}\n        >\n          {loading ? 'Generating...' : 'Generate MIDI'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}